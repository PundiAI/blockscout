# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: PundiAI Publish Docker image

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

env:
  OTP_VERSION: '25.2.1'
  ELIXIR_VERSION: '1.14.3'

jobs:
  push_to_registry:
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: 5.1.4
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/pundiai/blockscout

      - name: Build & Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          cache-from: type=registry,ref=ghcr.io/pundiai/blockscout:buildcache
          cache-to: type=registry,ref=ghcr.io/pundiai/blockscout:buildcache,mode=max
          tags: ghcr.io/pundiai/blockscout:latest, ghcr.io/pundiai/blockscout:${{ env.RELEASE_VERSION }}-rc4
          platforms: |
            linux/arm64
            linux/amd64
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=
            DISABLE_READ_API=false
            DISABLE_WEBAPP=false
            DISABLE_WRITE_API=false
            CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED=
            ADMIN_PANEL_ENABLED=false
            DECODE_NOT_A_CONTRACT_CALLS=false
            MIXPANEL_URL=
            MIXPANEL_TOKEN=
            AMPLITUDE_URL=
            AMPLITUDE_API_KEY=
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
            BLOCKSCOUT_VERSION=v${{ env.RELEASE_VERSION }}-beta
            RELEASE_VERSION=${{ env.RELEASE_VERSION }}